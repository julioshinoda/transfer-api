// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	database "github.com/julioshinoda/transfer-api/pkg/database"
	mock "github.com/stretchr/testify/mock"
)

// SQLInterface is an autogenerated mock type for the SQLInterface type
type SQLInterface struct {
	mock.Mock
}

// QueryExecutor provides a mock function with given fields: config
func (_m *SQLInterface) QueryExecutor(config database.QueryConfig) ([]interface{}, error) {
	ret := _m.Called(config)

	var r0 []interface{}
	if rf, ok := ret.Get(0).(func(database.QueryConfig) []interface{}); ok {
		r0 = rf(config)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]interface{})
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(database.QueryConfig) error); ok {
		r1 = rf(config)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// TransactionExecutor provides a mock function with given fields: configs
func (_m *SQLInterface) TransactionExecutor(configs []database.QueryConfig) error {
	ret := _m.Called(configs)

	var r0 error
	if rf, ok := ret.Get(0).(func([]database.QueryConfig) error); ok {
		r0 = rf(configs)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
